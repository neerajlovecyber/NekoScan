name: Tauri Release Workflow

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Step 1: Draft Release on GitHub
  draft:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release Draft
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.sha }}
          release_name: "Release v${{ github.sha }}"
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Step 2: Build App for Multiple Platforms
  build:
    needs: draft
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04,  windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Rust Stable Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true

      - name: Install Linux Dependencies (if Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.1

      - name: Build Tauri App
        run: |
          npm ci
          npm run tauri build ${matrix.os == 'macos-latest' && '--target x86_64-apple-darwin aarch64-apple-darwin'}
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      - name: Upload Assets to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.draft.outputs.upload_url }}
          asset_path: src-tauri/target/release
          asset_name: tauri_app_${{ matrix.os }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Step 3: Publish Release on GitHub
  publish:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Publish GitHub Release
        run: |
          gh release publish ${{ github.sha }} --draft=false --prerelease=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
